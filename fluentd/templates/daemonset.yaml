apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
  annotations:
    "helm.sh/created": {{.Release.Time.Seconds | quote }}
spec:
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      labels:
        app: {{ template "fullname" . }}
    spec:
      containers:
      - image: "{{.Values.Image}}:{{.Values.ImageTag}}"
        imagePullPolicy: "{{.Values.ImagePullPolicy}}"
        name: "{{.Values.Name}}"
        ports:
          - name: scrape
            containerPort: 24231
        env:
          - name: ELASTICSEARCH_HOST
            value: {{default (printf "%s-es" .Release.Name) .Values.elasticsearchHost}}
          - name: ELASTICSEARCH_PORT
            value: "9200"
          - name: KUBERNETES_VERIFY_SSL
            value: "{{.Values.KubernetesVerifySSL}}"
        volumeMounts:
          - name: varlog
            mountPath: /var/log
          - name: defaultdocker
            mountPath: /var/lib/docker/containers
            readOnly: true
          - name: awsdocker
            mountPath: /mnt/ephemeral/docker/containers
            readOnly: true
          - name: minikubedocker
            mountPath: /mnt/sda1/var/lib/docker/containers
            readOnly: true
        resources:
          limits:
            cpu: 100m
        securityContext:
          privileged: true
      volumes:
        - name: varlog
          hostPath:
            path: /var/log
        - name: defaultdocker
          hostPath:
            path: /var/lib/docker/containers
        - name: awsdocker
          hostPath:
            path: /mnt/ephemeral/docker/containers
        - name: minikubedocker
          hostPath:
            path: /mnt/sda1/var/lib/docker/containers